(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>a});var r=t(537),A=t.n(r),i=t(645),o=t.n(i)()(A());o.push([n.id,"body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Josefin Sans', sans-serif;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr 8fr .5fr;\n    min-height: 100vh;\n    position: relative;\n}\n\n/* Header */\n\n.header {\n    background: linear-gradient(to top, #fff1eb 0%, #ace0f9 100%);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    grid-column: 1 / 3;\n}\n\n.header h1 {\n    margin: 0;\n    padding: 0;\n}\n\n/* NAV */\n\n.nav {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    background: linear-gradient(to top, #dfe9f3 0%, white 100%);\n    display: flex;\n    flex-direction: column;\n    padding: 15%;\n}\n\n.nav h3 {\n    text-decoration: underline;\n    font-style: italic;\n}\n\n.todo-list {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n}\n\n.pri {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n}\n\n.navitem {\n    border: 2px solid grey;\n    border-radius: 5px;\n    padding: 10px;\n    cursor: pointer;\n    transition: transform 0.2s;\n}\n\n.navitem:hover {\n    transform: scale(1.05);\n    box-shadow: 5px 5px 10px skyblue;\n    border: 2px solid black;\n}\n\n.preview {\n    border-radius: 5px;\n    padding: 5px;\n    cursor: pointer;\n    transition: transform 0.2s;\n}\n\n.preview:hover {\n    transform: scale(1.05);\n    box-shadow: 5px 5px 10px skyblue;\n}\n\n.create {\n    margin-bottom: 50%;\n}\n\n\n/* Content */\n\n.content {\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    background: radial-gradient(328px at 2.9% 15%, rgb(191, 224, 251) 0%, rgb(232, 233, 251) 25.8%, rgb(252, 239, 250) 50.8%, rgb(234, 251, 251) 77.6%, rgb(240, 251, 244) 100.7%);\n    display: flex;\n}\n\n/* Create Modal */\n\n.create-modal {\n    flex: 1;\n    display: flex;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    margin: 4% 15%;\n    flex: 1;\n    gap: 5px;\n    border: 5px solid lightgrey;\n    border-radius: 10px;\n    box-shadow: 10px 10px 10px skyblue;\n    padding: 10px;\n    transition: transform 0.2s;\n}\n\nform:hover {\n        box-shadow: 10px 10px 10px lightgreen;\n        border: 5px solid rgb(186, 186, 186);\n        transform: translateY(-3px);\n}\n\nlabel {\n    font-weight: bold;\n    height: 5%;\n}\n\ninput, select {\n    border-radius: 5px;\n    border: 1px solid grey;\n    margin-bottom: 10px;\n    padding: 5px;\n    font-family: 'Josefin Sans', sans-serif;\n}\n\n#description {\n    height: 40%;\n}\n\n.submit {\n    display: flex;\n    justify-content: center;\n    padding-top: 10px;\n}\n\nform button {\n    width: 20%;\n    padding: 10px 5px;\n    border-radius: 5px;\n}\n\n/* Create Message */\n\n.create-message {\n    position: absolute;\n    top: 25%;\n    left: 50%;\n    transform: translate(-50%,-50%) scale(1);\n    transition: .5s ease-in-out;\n    color: black;\n    border: 5px solid black;\n    padding: 15px;\n    border-radius: 10px;\n    background: linear-gradient(to top, #dfe9f3 0%, white 100%);\n    min-width: 20%;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n    \n/* Show page */\n\n.show-task {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    margin: 5% 20%; \n    gap: 10px;\n    border: 10px solid lightgrey;\n    border-radius: 10px;\n    box-shadow: 2px 2px 10px skyblue;\n}\n\n.show {\n    border: 2px solid grey;\n    margin: 10px;\n    padding: 2%;\n    border-radius: 10px;\n    box-shadow: 5px 5px 10px skyblue;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.duedateshow, .priorityshow {\n    flex-direction: row;\n    height: 2%;\n}\n\n.text {\n    font-weight: bold;\n}\n\n.descriptionshow {\n    flex: 1;\n}\n\n.delete {\n    display: flex;\n    justify-content: flex-end;\n}\n\n#delete {\n    background: pink;\n    border-radius: 10px;\n    padding: 5px 10px;\n    margin-bottom: 10px;\n    margin-right: 15px;\n    border: 1px solid grey\n}\n\n/* Footer */\n\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: radial-gradient(circle at 12.3% 19.3%, rgb(85, 88, 218) 0%, rgb(95, 209, 249) 100.2%);\n    grid-column: 1  / 3;\n    padding: 5px;\n}\n.footer img {\n    height: 20px;\n}\n\na {\n    text-decoration: none;\n    color: black;\n    font-weight: bold;\n}\n\n.hidden {\n    display: none;\n    visibility: hidden;\n    opacity: 0;\n    transform: scale(0);\n    transition: .5s ease-in-out;\n}\n","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["body {\n    margin: 0;\n    padding: 0;\n    font-family: 'Josefin Sans', sans-serif;\n}\n\n.container {\n    display: grid;\n    grid-template-columns: 1fr 4fr;\n    grid-template-rows: 1fr 8fr .5fr;\n    min-height: 100vh;\n    position: relative;\n}\n\n/* Header */\n\n.header {\n    background: linear-gradient(to top, #fff1eb 0%, #ace0f9 100%);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    grid-column: 1 / 3;\n}\n\n.header h1 {\n    margin: 0;\n    padding: 0;\n}\n\n/* NAV */\n\n.nav {\n    grid-column: 1 / 2;\n    grid-row: 2 / 3;\n    background: linear-gradient(to top, #dfe9f3 0%, white 100%);\n    display: flex;\n    flex-direction: column;\n    padding: 15%;\n}\n\n.nav h3 {\n    text-decoration: underline;\n    font-style: italic;\n}\n\n.todo-list {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n}\n\n.pri {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n}\n\n.navitem {\n    border: 2px solid grey;\n    border-radius: 5px;\n    padding: 10px;\n    cursor: pointer;\n    transition: transform 0.2s;\n}\n\n.navitem:hover {\n    transform: scale(1.05);\n    box-shadow: 5px 5px 10px skyblue;\n    border: 2px solid black;\n}\n\n.preview {\n    border-radius: 5px;\n    padding: 5px;\n    cursor: pointer;\n    transition: transform 0.2s;\n}\n\n.preview:hover {\n    transform: scale(1.05);\n    box-shadow: 5px 5px 10px skyblue;\n}\n\n.create {\n    margin-bottom: 50%;\n}\n\n\n/* Content */\n\n.content {\n    grid-row: 2 / 3;\n    grid-column: 2 / 3;\n    background: radial-gradient(328px at 2.9% 15%, rgb(191, 224, 251) 0%, rgb(232, 233, 251) 25.8%, rgb(252, 239, 250) 50.8%, rgb(234, 251, 251) 77.6%, rgb(240, 251, 244) 100.7%);\n    display: flex;\n}\n\n/* Create Modal */\n\n.create-modal {\n    flex: 1;\n    display: flex;\n}\n\nform {\n    display: flex;\n    flex-direction: column;\n    margin: 4% 15%;\n    flex: 1;\n    gap: 5px;\n    border: 5px solid lightgrey;\n    border-radius: 10px;\n    box-shadow: 10px 10px 10px skyblue;\n    padding: 10px;\n    transition: transform 0.2s;\n}\n\nform:hover {\n        box-shadow: 10px 10px 10px lightgreen;\n        border: 5px solid rgb(186, 186, 186);\n        transform: translateY(-3px);\n}\n\nlabel {\n    font-weight: bold;\n    height: 5%;\n}\n\ninput, select {\n    border-radius: 5px;\n    border: 1px solid grey;\n    margin-bottom: 10px;\n    padding: 5px;\n    font-family: 'Josefin Sans', sans-serif;\n}\n\n#description {\n    height: 40%;\n}\n\n.submit {\n    display: flex;\n    justify-content: center;\n    padding-top: 10px;\n}\n\nform button {\n    width: 20%;\n    padding: 10px 5px;\n    border-radius: 5px;\n}\n\n/* Create Message */\n\n.create-message {\n    position: absolute;\n    top: 25%;\n    left: 50%;\n    transform: translate(-50%,-50%) scale(1);\n    transition: .5s ease-in-out;\n    color: black;\n    border: 5px solid black;\n    padding: 15px;\n    border-radius: 10px;\n    background: linear-gradient(to top, #dfe9f3 0%, white 100%);\n    min-width: 20%;\n    text-align: center;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n    \n/* Show page */\n\n.show-task {\n    display: flex;\n    flex-direction: column;\n    flex: 1;\n    margin: 5% 20%; \n    gap: 10px;\n    border: 10px solid lightgrey;\n    border-radius: 10px;\n    box-shadow: 2px 2px 10px skyblue;\n}\n\n.show {\n    border: 2px solid grey;\n    margin: 10px;\n    padding: 2%;\n    border-radius: 10px;\n    box-shadow: 5px 5px 10px skyblue;\n    display: flex;\n    flex-direction: column;\n    gap: 15px;\n}\n\n.duedateshow, .priorityshow {\n    flex-direction: row;\n    height: 2%;\n}\n\n.text {\n    font-weight: bold;\n}\n\n.descriptionshow {\n    flex: 1;\n}\n\n.delete {\n    display: flex;\n    justify-content: flex-end;\n}\n\n#delete {\n    background: pink;\n    border-radius: 10px;\n    padding: 5px 10px;\n    margin-bottom: 10px;\n    margin-right: 15px;\n    border: 1px solid grey\n}\n\n/* Footer */\n\n.footer {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background: radial-gradient(circle at 12.3% 19.3%, rgb(85, 88, 218) 0%, rgb(95, 209, 249) 100.2%);\n    grid-column: 1  / 3;\n    padding: 5px;\n}\n.footer img {\n    height: 20px;\n}\n\na {\n    text-decoration: none;\n    color: black;\n    font-weight: bold;\n}\n\n.hidden {\n    display: none;\n    visibility: hidden;\n    opacity: 0;\n    transform: scale(0);\n    transition: .5s ease-in-out;\n}\n"],sourceRoot:""}]);const a=o},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,A,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(r)for(var a=0;a<this.length;a++){var s=this[a][0];null!=s&&(o[s]=!0)}for(var d=0;d<n.length;d++){var l=[].concat(n[d]);r&&o[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),A&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=A):l[4]="".concat(A)),e.push(l))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),A="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),i="/*# ".concat(A," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},o=[],a=0;a<n.length;a++){var s=n[a],d=r.base?s[0]+r.base:s[0],l=i[d]||0,c="".concat(d," ").concat(l);i[d]=l+1;var p=t(c),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var C=A(u,r);r.byIndex=a,e.splice(a,0,{identifier:c,updater:C,references:1})}o.push(c)}return o}function A(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,A){var i=r(n=n||[],A=A||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var a=t(i[o]);e[a].references--}for(var s=r(n,A),d=0;d<i.length;d++){var l=t(i[d]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var A=void 0!==t.layer;A&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,A&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(r){var A=e[r];if(void 0!==A)return A.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0,(()=>{class n{constructor(n,e,t,r){this.title=n,this.dueDate=e,this.priority=t,this.description=r}getTitle(){return this.title}}const e=new class{constructor(){this.list=[]}addTask(n){this.list.push(n)}removeTask(n){this.list.splice(n,1)}};class r{static createTask(){const e=document.querySelector("#title"),t=document.querySelector("#due-date"),r=document.querySelector("#priority"),A=document.querySelector("#description"),i=new n(e.value,t.value,r.value,A.value);return this.createFieldReset(),this.messageCreated(),i}static deleteTask(){}static showTask(n){const e=document.querySelector(`.${n.priority}`),t=document.createElement("div");t.innerHTML=`&#x2022; ${n.title}`,t.classList.add("preview"),e.appendChild(t)}static createFieldReset(){["#title","#due-date","#priority","#description"].forEach((n=>{document.querySelector(n).value=""}))}static messageCreated(){const n=document.querySelector(".create-message");n.classList.remove("hidden"),setTimeout((()=>{n.classList.add("hidden")}),1500)}static showPageTask(n){document.querySelector(".show-task").classList.toggle("hidden");const t=document.querySelector(".titleshow"),r=document.querySelector(".duedateshow"),A=document.querySelector(".priorityshow"),i=document.querySelector(".descriptionshow");for(const o of e.list)if(n.innerHTML.substring(2)==o.title){const n=document.createElement("div");n.innerHTML=o.title,t.appendChild(n);const e=document.createElement("div");e.innerHTML=o.dueDate,r.appendChild(e);const a=document.createElement("div");a.innerHTML=o.priority,A.appendChild(a);const s=document.createElement("div");s.innerHTML=o.description,i.appendChild(s)}}}var A=t(379),i=t.n(A),o=t(795),a=t.n(o),s=t(569),d=t.n(s),l=t(565),c=t.n(l),p=t(216),u=t.n(p),C=t(589),f=t.n(C),g=t(426),x={};x.styleTagTransform=f(),x.setAttributes=c(),x.insert=d().bind(null,"head"),x.domAPI=a(),x.insertStyleElement=u(),i()(g.Z,x),g.Z&&g.Z.locals&&g.Z.locals,document.addEventListener("DOMContentLoaded",(()=>{document.addEventListener("click",(n=>{if(n.target.classList.contains("create"))document.querySelector(".create-modal").classList.toggle("hidden");else if("submit"==n.target.id){const n=r.createTask();e.addTask(n),r.showTask(n)}else n.target.classList.contains("preview")?(document.querySelector(".create-modal").classList.add("hidden"),r.showPageTask(n.target)):n.target.id}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,